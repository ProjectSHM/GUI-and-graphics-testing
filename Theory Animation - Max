from Tkinter import *
import math

root = Tk()

theory_animation = Canvas(root, width=400, height=320, bg="white")
theory_animation.pack()

radius = 50
x_circle_list = []
y_circle_list = []
angle = 1.675*2
k = 0
c = 0
d = 0

sin_x_list = []
sin_y_list = []

degrees = k*angle

for f in range(1, 360, 1):
    x_circle_list.append(round(50*math.cos(math.radians(k*angle)), 1))
    y_circle_list.append(round(-50*math.sin(math.radians(k*angle)), 1)+160)
    k += 1

k=0

def animation():
    global c
    global d
    global k
    global angle

    theta_circle = theory_animation.create_oval(50,110, 150, 210)
    
    graph_line_y = theory_animation.create_line(170, 90, 170, 230)
    graph_line_arrow_y = theory_animation.create_line(170,90, 165,95), theory_animation.create_line(170,90, 175,95)
    
    graph_line_x = theory_animation.create_line(170, 160, 386, 160)
    graph_line_arrow_x = theory_animation.create_line(386,160, 381, 155), theory_animation.create_line(386,160, 381, 165) 
    circle_line_x = theory_animation.create_line(100, 160, 150, 160)

    theory_animation.create_text(175,80, text="Amplitude")
    theory_animation.create_text(380,150, text="Time")
    theta = theory_animation.create_text(112, 148, text=u'\u0398'.lower())

    spring_particle = theory_animation.create_oval(20,y_circle_list[c]-5, 30,y_circle_list[c]+5, fill="red")

    circle_line = theory_animation.create_line(100,160, x_circle_list[c]+100,y_circle_list[c] )
    circle_particle = theory_animation.create_oval(x_circle_list[c]+95,y_circle_list[c]-5,
                                                   x_circle_list[c]+105,y_circle_list[c]+5, fill="red")

    arc = theory_animation.create_arc(90,150, 110,170, start=0, extent=k*angle, fill="light blue")
    k +=1

    sine_wave = theory_animation.create_line(170+c,y_circle_list[c], 170+c+1, y_circle_list[c+1], fill="blue")
    sine_wave_particle = theory_animation.create_oval(165+c,y_circle_list[c]-5, 175+c, y_circle_list[c]+5, fill="red")


    link_line = theory_animation.create_line(x_circle_list[c]+100,y_circle_list[c], 170+c, y_circle_list[c], fill="grey")
        
    if 170+c+1 == 386:
        return
            

    c += 1

    root.after(10, clear_screen, spring_particle, circle_line, circle_particle, sine_wave_particle, link_line, arc)

def clear_screen(a, b, c, d, e, f):
    theory_animation.delete(a, b, c, d, e, f)
    animation()
    
   
animation()
root.mainloop()
